package edu.duke.ece651;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.IOException;

public class waitingRoom {
    private JPanel panel1;
    private JLabel Player1Label;
    private JTextField Player1Status;
    private JTextField Player2Status;
    private JTextField Player3Status;
    private JTextField Player4Status;
    private JTextField Player5Status;
    private JLabel Player2Label;
    private JLabel Player3Label;
    private JLabel Player4Label;
    private JLabel Player5Label;
    private JButton playButton;

    public static String color;

    public String checkStatus(String currColor) {
        if (color.equals(currColor)) {
            return "You are this player, players above you is ready.";
        } else {
            return "This is not you.";
        }
    }

    public waitingRoom(Client currClient, JFrame currFrame) {
        Player1Status.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                Player1Status.setText(checkStatus("Green"));
            }

            @Override
            public void focusLost(FocusEvent e) {
                super.focusLost(e);
                Player1Status.setText("select here to check this player's status");
            }
        });
        Player2Status.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                Player2Status.setText(checkStatus("Blue"));
            }

            public void focusLost(FocusEvent e) {
                super.focusLost(e);
                Player2Status.setText("select here to check this player's status");
            }
        });
        Player3Status.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                Player3Status.setText(checkStatus("Red"));
            }

            @Override
            public void focusLost(FocusEvent e) {
                super.focusLost(e);
                Player3Status.setText("select here to check this player's status");
            }
        });
        Player4Status.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                Player4Status.setText(checkStatus("Yellow"));
            }

            @Override
            public void focusLost(FocusEvent e) {
                super.focusLost(e);
                Player4Status.setText("select here to check this player's status");
            }
        });
        Player5Status.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                Player5Status.setText(checkStatus("Orange"));
            }

            @Override
            public void focusLost(FocusEvent e) {
                super.focusLost(e);
                Player5Status.setText("select here to check this player's status");
            }
        });
        playButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                currFrame.setVisible(false);
                JFrame waitingF = waitingINFO.main();
                try {
                    String initString = currClient.Recv();
                    playPage.main(currClient, initString);
                    waitingF.setVisible(false);
                } catch (InterruptedException e) {
                    System.out.println("fail to receive");
                } catch (IOException e) {
                    System.out.println("fail to receive");
                }
            }
        });
    }

    public JPanel getPanel1() {
        return panel1;
    }

    public JTextField getPlayer1Status() {
        return Player1Status;
    }

    public static void main(Client currClient) throws IOException, InterruptedException {
        JFrame frame = new JFrame("waitingRoom");
        frame.setContentPane(new waitingRoom(currClient, frame).panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        color = currClient.Recv();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(6, 7, new Insets(0, 0, 0, 0), -1, -1));
        Player1Label = new JLabel();
        Player1Label.setText("Green Player");
        panel1.add(Player1Label, new GridConstraints(0, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Player1Status = new JTextField();
        panel1.add(Player1Status, new GridConstraints(0, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        Player2Label = new JLabel();
        Player2Label.setText("Blue Player");
        panel1.add(Player2Label, new GridConstraints(1, 0, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Player3Label = new JLabel();
        Player3Label.setText("Red Player");
        panel1.add(Player3Label, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Player4Label = new JLabel();
        Player4Label.setText("Yellow Player");
        panel1.add(Player4Label, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Player5Label = new JLabel();
        Player5Label.setText("Orange Player");
        panel1.add(Player5Label, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Player2Status = new JTextField();
        panel1.add(Player2Status, new GridConstraints(1, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        Player3Status = new JTextField();
        panel1.add(Player3Status, new GridConstraints(2, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        Player4Status = new JTextField();
        panel1.add(Player4Status, new GridConstraints(3, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        Player5Status = new JTextField();
        panel1.add(Player5Status, new GridConstraints(4, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        playButton = new JButton();
        playButton.setText("start");
        panel1.add(playButton, new GridConstraints(5, 0, 1, 7, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
